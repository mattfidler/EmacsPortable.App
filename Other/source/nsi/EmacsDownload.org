#+TITLE: Emacs Download Script    
#+AUTHOR: Matthew L. Fidler
#+PROPERTY: header-args :tangle EmacsDownload.nsi
* Installer Properties
** Setup Options
I want:
 - user level execution
 - CRC check
 - Good compression    
#+BEGIN_SRC nsis
CRCCheck On
RequestExecutionLevel user
; Best Compression
SetCompress Auto
SetCompressor /SOLID lzma
SetCompressorDictSize 32
SetDatablockOptimize On
#+END_SRC

** User Interface
Modern UI2 user interface
#+BEGIN_SRC nsis
!include "MUI2.nsh"
!include "LogicLib.nsh"
!include "EmacsDownloadShared.nsh"
#+END_SRC
** Defines
#+BEGIN_SRC nsis
!define mirror $INSTDIR\App\ini\mirrors.ini
#+END_SRC

** Headers and Plugins
#+BEGIN_SRC nsis
  !include "FileFunc.nsh"
  !include "nsDialogs.nsh"
#+END_SRC
** Output Executable
#+BEGIN_SRC nsis
OutFile "..\..\..\EmacsDownload.exe"
#+END_SRC

** Modern UI interface setup
#+BEGIN_SRC nsis
  Name "EmacsPortable.App Download Emacs"
  BrandingText "EmacsPortable.App"
  !define MUI_ICON "..\img\ico\download.ico"
  !define MUI_HEADERIMAGE
  
  !define MUI_HEADERIMAGE_BITMAP "..\img\headerimage.bmp" ; 150x57 pixels
  !define MUI_HEADERIMAGE_UNBITMAP "..\img\headerimage.bmp" ; 150x57 pixels
  
  !define MUI_WELCOMEFINISHPAGE_BITMAP "..\img\welcome.bmp" ;164x314 pixels
  !define MUI_UNWELCOMEFINISHPAGE_BITMAP "..\img\welcome.bmp" ;164x314 pixels
  
  !define MUI_ABORTWARNING
  !define MUI_UNABORTWARNING
  !define MUI_PAGE_HEADER_TEXT "EmacsPortable.app"
  !define MUI_PAGE_HEADER_SUBTEXT "Emacs on the Go"
  
  !define MUI_COMPONENTSPAGE_SMALLDESC
  !define MUI_HEADERIMAGE_RIGHT
  Page Custom fnc_download_Show fnc_download_Leave
  !insertmacro MUI_PAGE_INSTFILES
  #!insertmacro MUI_PAGE_FINISH
  !insertmacro MUI_LANGUAGE "English"
#+END_SRC

** Global variables
#+BEGIN_SRC nsis
Var download_emacs_version
Var download_mac
#+END_SRC
* Custom Pages
** Download Page
*** Component 
#+BEGIN_SRC nsis
  ; handle variables
  Var hCtl_download
  Var hCtl_download_EmacsDownload
  Var hCtl_download_DownloadVersion
  Var hCtl_download_Label1
  Var hCtl_download_DownloadMac
  Var hCtl_download_GroupBox2
  Var hCtl_download_GnuWin32Utils
  Var hCtl_download_EZWinUtils
  Var hCtl_download_LinkToSelect
  Var hCtl_download_Startup
  Var hCtl_download_DropList1
  Var hCtl_download_Label2
  Var hCtl_download_GroupBox1
  Var hCtl_download_DropList2
  Var hCtl_download_Label3
  Var hCtl_download_Link2
  Var hCtl_download_Use
  Var hCtl_download_UseLabel
  Var hCtl_download_CompileTools
  Var hCtl_download_NSIS
  Var hCtl_download_CheckBox1
  Var hCtl_download_SpellGroup
  Var hCtl_download_DropList3
  Var hCtl_download_Label4
  Var hCtl_download_Label5
  Var hCtl_download_Dict
  
  
  ; dialog create function
  Function fnc_download_Create
    
    ; === download (type: Dialog) ===
    nsDialogs::Create 1018
    Pop $hCtl_download
    ${If} $hCtl_download == error
      Abort
    ${EndIf}
    !insertmacro MUI_HEADER_TEXT "Select Components to Download" "These are optional components or additional components to download for EmacsPortable.App"
    
    ; === EmacsDownload (type: GroupBox) ===
    ${NSD_CreateGroupBox} 8u 7u 131u 44u "Emacs Download"
    Pop $hCtl_download_EmacsDownload
    
    ; === DownloadVersion (type: DropList) ===
    ${NSD_CreateDropList} 48u 17u 87u 12u "24.4"
    Pop $hCtl_download_DownloadVersion
    SetCtlColors $hCtl_download_DownloadVersion 0x000000 0xFFFFFF
    ${NSD_OnChange} $hCtl_download_DownloadVersion CheckMac
    Call SetupVersions
    
    ; === Label1 (type: Label) ===
    ${NSD_CreateLabel} 12u 19u 32u 13u "Version"
    Pop $hCtl_download_Label1
    
    ; === DownloadMac (type: Checkbox) ===
    ${NSD_CreateCheckbox} 12u 33u 123u 14u "Download Mac Binaries"
    Pop $hCtl_download_DownloadMac
    ${NSD_Check} $hCtl_download_DownloadMac
  
    SetOutPath "$INSTDIR\Data\ini"
    File "unix-download.ini"  
    ; === GroupBox2 (type: GroupBox) ===
    ${NSD_CreateGroupBox} 8u 54u 131u 68u "Unix Utilities Download"
    Pop $hCtl_download_GroupBox2
    
    ; === GnuWin32Utils (type: Checkbox) ===
    ${NSD_CreateCheckbox} 12u 65u 123u 14u "Download GnuWin32 Utilities"
    Pop $hCtl_download_GnuWin32Utils

    Call enablegw32
    
    ; === EZWinUtils (type: Checkbox) ===
    ${NSD_CreateCheckbox} 12u 82u 123u 14u "Download EZWin Utilities"
    Pop $hCtl_download_EZWinUtils
    
    ; === LinkToSelect (type: Link) ===
    ${NSD_CreateLink} 12u 97u 123u 20u "Select individual Unix components"
    Pop $hCtl_download_LinkToSelect
    ${NSD_OnClick} $hCtl_download_LinkToSelect SelectUnixComponents
    
    ; === VLine1 (type: VLine) ===
    ${NSD_CreateVLine} 143u 7u 1u 115u ""
    
    ; === Startup (type: GroupBox) ===
    ${NSD_CreateGroupBox} 148u 7u 139u 44u "Startup Script Download"
    Pop $hCtl_download_Startup
    
    ; === DropList1 (type: DropList) ===
    ${NSD_CreateDropList} 179u 17u 104u 12u ""
    Pop $hCtl_download_DropList1
    SetCtlColors $hCtl_download_DropList1 0x000000 0xFFFFFF
    
    ; === Label2 (type: Label) ===
    ${NSD_CreateLabel} 152u 17u 23u 13u "Script"
    Pop $hCtl_download_Label2
    
    ; === GroupBox1 (type: GroupBox) ===
    ${NSD_CreateGroupBox} 148u 7u 139u 44u "Startup Script Download"
    Pop $hCtl_download_GroupBox1
    
    ; === DropList2 (type: DropList) ===
    ${NSD_CreateDropList} 179u 17u 104u 12u ""
    Pop $hCtl_download_DropList2
    SetCtlColors $hCtl_download_DropList2 0x000000 0xFFFFFF
    
    ; === Label3 (type: Label) ===
    ${NSD_CreateLabel} 152u 17u 23u 13u "Script"
    Pop $hCtl_download_Label3
    
    ; === Link2 (type: Link) ===
    ${NSD_CreateLink} 247u 35u 37u 13u "Add script"
    Pop $hCtl_download_Link2
    ${NSD_OnClick} $hCtl_download_Link2 AddStartup
    
    ; === Use (type: ComboBox) ===
    ${NSD_CreateComboBox} 179u 33u 64u 12u "Git"
    Pop $hCtl_download_Use
    SetCtlColors $hCtl_download_Use 0x000000 0xFFFFFF
    ${NSD_CB_AddString} $hCtl_download_Use "Git"
    ${NSD_CB_AddString} $hCtl_download_Use "Zip"
    ${NSD_CB_SelectString} $hCtl_download_Use "Git"
    
    ; === UseLabel (type: Label) ===
    ${NSD_CreateLabel} 152u 34u 23u 13u "Use"
    Pop $hCtl_download_UseLabel
    
    ; === CompileTools (type: GroupBox) ===
    ${NSD_CreateGroupBox} 148u 54u 139u 24u "EmacsPortable.App Compile Tools"
    Pop $hCtl_download_CompileTools
    
    ; === NSIS (type: Checkbox) ===
    ${NSD_CreateCheckbox} 152u 64u 42u 14u "NSIS"
    Pop $hCtl_download_NSIS
    
    ; === CheckBox1 (type: Checkbox) ===
    ${NSD_CreateCheckbox} 198u 64u 56u 14u "AutoHotKey"
    Pop $hCtl_download_CheckBox1
    
    ; === SpellGroup (type: GroupBox) ===
    ${NSD_CreateGroupBox} 148u 81u 139u 41u "Fonts and Spelling Download"
    Pop $hCtl_download_SpellGroup
    
    ; === DropList3 (type: DropList) ===
    ${NSD_CreateDropList} 188u 90u 96u 12u ""
    Pop $hCtl_download_DropList3
    SetCtlColors $hCtl_download_DropList3 0x000000 0xFFFFFF
    
    ; === Label4 (type: Label) ===
    ${NSD_CreateLabel} 155u 92u 20u 13u "Font"
    Pop $hCtl_download_Label4
    
    ; === Label5 (type: Label) ===
    ${NSD_CreateLabel} 155u 107u 39u 13u "Dictionary"
    Pop $hCtl_download_Label5
    
    ; === ComboBox1 (type: ComboBox) ===
    ${NSD_CreateDropList} 198u 105u 85u 12u ""
    Pop $hCtl_download_Dict
    SetCtlColors $hCtl_download_Dict 0x000000 0xFFFFFF
  FunctionEnd
  
  
  ; dialog show function
  Function fnc_download_Show
    Call fnc_download_Create
    nsDialogs::Show $hCtl_download
  FunctionEnd
  
#+END_SRC

*** Callback Functions
**** Check to see if Mac Binaries are available
#+BEGIN_SRC nsis
   Function CheckMac
     
   FunctionEnd   
#+END_SRC


**** Add a startup script
#+BEGIN_SRC nsis
Function AddStartup
FunctionEnd
#+END_SRC


*** Leave Download Page
#+BEGIN_SRC nsis
  Function fnc_download_Leave
    ${NSD_GetText}  $hCtl_download_DownloadVersion $download_emacs_version
    ${NSD_GetState}  $hCtl_download_DownloadMac $download_mac
  FunctionEnd
  
#+END_SRC

*** Download Functions
**** Download Emacs

#+BEGIN_SRC nsis
Function downloadEmacs
  DetailPrint "Attempting to Download Emacs $download_emacs_version"
  IfFileExists "$INSTDIR\App\emacs-$download_emacs_version" 0 +3
  DetailPrint "Emacs $download_emacs_version already exists, not downloading again."
  Goto download_mac
  download_pc:
    Call getWin
  download_mac:
    StrCmp "$download_mac" "1" 0 skip_mac
    IfFileExists "$INSTDIR\App\emacs-$download_emacs_version\MacOS" 0 +3
    DetailPrint "Emacs $download_emacs_version  Mac files already exist, not downloading again."
    Goto skip_mac
    Call getMac
  skip_mac:
    ClearErrors
FunctionEnd
Function getWin
  ${getEmacsWin} "$download_emacs_version"
FunctionEnd
Function getMac
  ${getEmacsMac} "$download_emacs_version"
FunctionEnd
#+END_SRC
**** Download Function

#+BEGIN_SRC nsis
Function DownloadFiles
  Call downloadEmacs
FunctionEnd
#+END_SRC

* Section
#+BEGIN_SRC nsis
  Section "Components"
    Call DownloadFiles
    ClearErrors
  SectionEnd  
#+END_SRC
* Function
** Initialization
#+BEGIN_SRC nsis
  Function .onInit
    StrCpy $INSTDIR $EXEDIR
  FunctionEnd
#+END_SRC
