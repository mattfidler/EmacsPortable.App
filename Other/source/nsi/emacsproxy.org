#+TITLE: Shared Proxy Code
#+AUTHOR: Matthew L. Fidler
#+PROPERTY: tangle emacsproxy.nsh
* Proxy
** Variables
#+BEGIN_SRC nsis
  Var PROXY_ID
  Var PROXY_IDE
  Var PROXY_NAME
  Var PROXY_SERVER
  Var PROXY_PORT
  Var PROXY_USER
  Var PROXY_PASS
  Var curr_ser
#+END_SRC
** Get Drive Serial Number
http://nsis.sourceforge.net/Get_Disk_Volume_Serial_Number
#+BEGIN_SRC nsis
!define _GetVolumeInformationSysCall "Kernel32::GetVolumeInformation(t,t,i,*i,*i,*i,t,i) i"
!macro GetDiskVolumeSerialNumber _SERIAL _DRIVE
  Push $0
  System::Call '${_GetVolumeInformationSysCall}("${_DRIVE}",,${NSIS_MAX_STRLEN},.r0,,,,${NSIS_MAX_STRLEN})'
  Exch $0
  Pop ${_SERIAL}
!macroend
!define GetDiskVolumeSerialNumber "!insertmacro GetDiskVolumeSerialNumber"
 
!macro GetDiskVolumeSerialNumberHex _SERIAL _DRIVE
  ${GetDiskVolumeSerialNumber} ${_SERIAL} ${_DRIVE}
  IntFmt ${_SERIAL} "%08X" ${_SERIAL}
!macroend
!define GetDiskVolumeSerialNumberHex "!insertmacro GetDiskVolumeSerialNumberHex"
#+END_SRC

** Read Line Function 
#+BEGIN_SRC nsis
  Function ReadFileLine
    Exch $0 ;file
    Exch
    Exch $1 ;line number
    Push $2
    Push $3
    
    FileOpen $2 $0 r
    StrCpy $3 0
    
    Loop:
      IntOp $3 $3 + 1
      ClearErrors
      FileRead $2 $0
      IfErrors +2
      StrCmp $3 $1 0 loop
      FileClose $2
      
      Pop $3
      Pop $2
      Pop $1
      Exch $0
  FunctionEnd
#+END_SRC

** Setup Proxy
#+BEGIN_SRC nsis
  Function IPAddressesCallback
    Pop $5
    StrCpy $6 $5 "" -1
    StrCmp "$6" "." +3
    StrCpy $5 $5 -1
    Goto -3
    StrCpy $5 $5 -1
    StrCpy $PROXY_IDE "$PROXY_IDE$5"
    StrCpy $PROXY_ID "$PROXY_ID$5"
    end:
      ClearErrors
  FunctionEnd
  
  Function SetupSerial
    ${If} $curr_ser == ""
      StrCpy $0 $EPEXE 3  
      ${GetDiskVolumeSerialNumberHex} $curr_ser $0
    ${EndIf}
  FunctionEnd
  
  Function SetupProxy
    Pop $9
    Pop $8
    Pop $7
    DetailPrint "Setup Proxy ($7)"
    Call SetupSerial
    ClearErrors
    StrCpy $PROXY_IDE ""
    StrCpy $PROXY_ID ""
    
    StrCpy $R0 ""
    StrCpy $R2 ""
    StrCpy $R3 ""
    
    ${If} ${FileExists} "$INSTDIR\App\gw32\bin\grep.exe"
      StrCpy $R3 "$INSTDIR\App\gw32\bin\grep.exe"
    ${ElseIf} ${FileExists} "$7\App\gw32\bin\grep.exe"
      StrCpy $R3 "$7\App\gw32\bin\grep.exe"  
    ${ElseIf} ${FileExists} "$INSTDIR\App\ezwin\bin\grep.exe"
      StrCpy $R3 "$INSTDIR\App\ezwin\bin\grep.exe"
    ${ElseIf} ${FileExists} "$7\App\ezwin\bin\grep.exe"
        StrCpy $R3 "$7\App\ezwin\bin\grep.exe"    
    ${EndIf}
    
    ${If} ${FileExists} "$INSTDIR\App\gw32\bin\sed.exe"
      StrCpy $R0 "$INSTDIR\App\gw32\bin\sed.exe"
    ${ElseIf} ${FileExists} "$INSTDIR\App\ezwin\bin\sed.exe"
      StrCpy $R0 "$INSTDIR\App\ezwin\bin\sed.exe"
    ${ElseIf} ${FileExists} "$7\App\gw32\bin\sed.exe"
      StrCpy $R0 "$7\App\gw32\bin\sed.exe"
    ${ElseIf} ${FileExists} "$7\App\ezwin\bin\sed.exe"
      StrCpy $R0 "$7\App\ezwin\bin\sed.exe"
    ${EndIf}
    
    ${If} ${FileExists} "$INSTDIR\App\gw32\bin\sort.exe"
      StrCpy $R2 "$INSTDIR\App\gw32\bin\sort.exe"
    ${ElseIf} ${FileExists} "$INSTDIR\App\ezwin\bin\sort.exe"
      StrCpy $R2 "$INSTDIR\App\ezwin\bin\sort.exe"
    ${ElseIf} ${FileExists} "$7\App\gw32\bin\sort.exe"
      StrCpy $R2 "$7\App\gw32\bin\sort.exe"
    ${ElseIf} ${FileExists} "$7\App\ezwin\bin\sort.exe"
      StrCpy $R2 "$7\App\ezwin\bin\sort.exe"
    ${EndIf}
    ${If} $R0 != ""
    ${AndIf} $R2 != ""
    ${AndIf} $R3 != ""  
      FileOpen $4 "$TEMP\ep\ep-sed-ip.bat" w
      IfErrors 0 +3
      DetailPrint "Error opening $TEMP\ep\ep-sed-ip.bat"
      Abort
      FileWrite $4 "@IF EXIST $TEMP\ep\ep-dns.bat DEL $TEMP\ep\ep-dns.bat$\r$\n"
      FileWrite $4 "@IF EXIST $TEMP\ep\ep-dns2.txt DEL $TEMP\ep\ep-dns2.txt$\r$\n"
      ${StrRep} "$R1" "$TEMP" "\" "\\"
      FileWrite $4 "@ipconfig | $R3 $\"IP A$\" | $R0 -r $\"s/[^0-9]*([0-9]*[0-9.]+).*/nslookup \1 >> $R1\\ep\\ep-dns2.txt/$\"  > $TEMP\ep\ep-dns.bat$\r$\n"
      FileWrite $4 "@CALL $TEMP\ep\ep-dns.bat$\r$\n"
      FileWrite $4 "@DEL $TEMP\ep\ep-dns.bat$\r$\n"
      FileWrite $4 "@$R2 $TEMP\ep\ep-dns2.txt$\r$\n"
      FileWrite $4 "@$R0 $\"/Address:.*/d$\" $TEMP\ep\ep-dns2.txt | $R0 $\"s/Server: *//$\" | $R0 $\"s/Name: *.*//$\" | $R0 $\"/^ *$$/d$\" | $R0 $\"$$!N; /^\(.*\)\n\1$$/!P; D$\" | $R0 $\":a;/$$/{N;s/\n/_/;ba}$\" > $TEMP\ep\ep-dns.txt$\r$\n"
      FileWrite $4 "@DEL $TEMP\ep\ep-dns2.txt$\r$\n"
      FileClose $4
      ExecDos::exec "cmd /c $\"$TEMP\ep\ep-sed-ip.bat$\""
      Delete "$TEMP\ep\ep-sed-ip.bat"
      
      read_ips:
        FileOpen $5 "$TEMP\ep\ep-dns.txt" r
        FileRead $5 $R0
        IfErrors 0 +3
        DetailPrint "Error Opening $TEMP\ep\ep-dns.txt"
        ClearErrors
        FileClose $5
        StrCpy $PROXY_IDE "$R0" -2
        StrCpy $PROXY_ID "$R0" -2
        Delete "$TEMP\ep\ep-dns.txt"
    ${Else}
      StrCpy $PROXY_IDE "NotFound"
      StrCpy $PROXY_ID "NotFound"
    ${EndIf}
    proxy_setup:
      ClearErrors
      StrCmp "$PROXY_ID" "" 0 +2
      StrCpy $PROXY_ID "Unknown"
      StrCpy $PROXY_NAME $PROXY_ID
      StrCpy $PROXY_ID "$PROXY_ID$curr_ser mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm"
      DetailPrint "Network: `$PROXY_IDE`"
      IfFileExists "$9\proxy-$PROXY_IDE.ini" 0 end
      blowfish::encrypt $PROXY_IDE "$PROXY_ID"
      Pop $R2
      Pop $R0
      ReadIniStr $R1 "$9\proxy-$PROXY_IDE.ini" "$PROXY_NAME" "ID"
      ClearErrors
      ${If} $R0 == $R1
        ReadIniStr $R0 "$9\proxy-$PROXY_IDE.ini" "$PROXY_NAME" "Server"
        blowfish::decrypt $R0 "$PROXY_ID"
        Pop $R0
        Pop $R0
        StrCpy "$PROXY_SERVER" "$R0"
        StrCmp "$R0" "" end
        StrCpy "$R1" "$R0"
        ReadIniStr "$R0" "$9\proxy-$PROXY_IDE.ini" "$PROXY_NAME" "Port"
        blowfish::decrypt $R0 "$PROXY_ID"
        Pop $R0
        Pop $R0
        StrCpy "$PROXY_PORT" "$R0"  
        StrCmp "$R0" "" +2 0
        StrCpy "$R1" "$R1:$R0"
        ReadIniStr "$R0" "$9\proxy-$PROXY_IDE.ini" "$PROXY_NAME" "User"
        blowfish::decrypt $R0 "$PROXY_ID"
        Pop $R0
        Pop $R0
        StrCpy $PROXY_USER "$R0"
        
        StrCmp "$R0" "" +2 0
        StrCpy "$R2" "$R0"
        ReadIniStr "$R0" "$9\proxy-$PROXY_IDE.ini" "$PROXY_NAME" "Password"
        blowfish::decrypt $R0 "$PROXY_ID"
        Pop $R0
        Pop $R0
        StrCpy $PROXY_PASS $R0
        StrCmp "$R0" "" +3 0
        StrCmp "$R2" "" +2 0
        StrCpy "$R2" "$R2:$R0"
        StrCmp "$R2" "" +2 0
        StrCpy $R3 '(setq url-proxy-services $\'(("http" . "$R1") ("ftp" . "$R1") ("https" . "$R1")))$\n' 
        StrCpy "$R1" "$R2@$R1"
        StrCpy $R3 '$R3(setenv "HTTP_PROXY" "http://$R1")$\n(setenv "HTTPS_PROXY" "https://$R1")$\n(setenv "FTP_PROXY" "ftp://$R1")$\n'
        System::Call 'Kernel32::SetEnvironmentVariableA(t, t) i("HTTP_PROXY","http://$R1").r0'
        System::Call 'Kernel32::SetEnvironmentVariableA(t, t) i("HTTPS_PROXY","https://$R1").r0'
        System::Call 'Kernel32::SetEnvironmentVariableA(t, t) i("FTP_PROXY","ftp://$R1").r0'
        StrCmp $8 "" end
        IfFileExists "$TEMP\ep" 0 +3
        StrCpy $1 "$TEMP\ep\proxy.el"
        Goto +2
        StrCpy $1 "$TEMP\proxy.el"
        FileOpen $3 $1 w
        FileWrite $3 $R3
        FileClose $3
      ${ElseIfNot} $R1 == ""
        DeleteIniSec "$9\proxy-$PROXY_IDE.ini" "$PROXY_NAME"
        MessageBox MB_OK "The drive that EmacsPortable.App is run from has changed.$\nProxy settings have been reset."
      ${EndIf}
    end:
      ClearErrors
  FunctionEnd
  
  !macro SetupProxy FILE
    Push "$7"
    Push ""
    Push "${FILE}"
    Call SetupProxy
    Pop $R0
  !macroend
  
  !define SetupProxy `!insertmacro SetupProxy "$EXEDIR\Data\ini\"`
  !define SetupProxyFile `!insertmacro SetupProxy`
  
#+END_SRC
